@-moz-document regexp('https://hangouts\\.google\\.com/(?!webchat/frame).*') {
/* Notes: Only URL dots must be escaped. This is how to ^ deny site subsections,
   per Stylish wiki:
https://github.com/stylish-userstyles/stylish/wiki/Applying-styles-to-specific-sites
*/

@media only screen and (max-width:320px) { HTML, BODY {width:320px;}  DIV.g-Ue-Ja-t {max-width:320px;}  DIV.Cl {max-width:255px !important;}  DIV.g-Ue-OkO9ve ~ DIV.Cl {height:calc(100% - 35px) !important;}  DIV.Ih {width:100%;}  DIV.hh > DIV.Xg > DIV.sh {position:absolute; top:72px; height:calc(100% - 72px);}  DIV.Ef {position:absolute; top:36px;} }
/* DIV.g-Ue-Ja-t : most of it; was: 628px
 • DIV.Cl : chat window. |previous| height:375px !important; width:255px !important;
   22.06.2017: In case of a classic header (w. IceCat), set height to a |calc|ulation.
 • DIV.Ih : chat window contents.
   Use important, because there are many rules applied to element via JavaScript. 
 • DIV.sh : CHAT MESSAGE AREA. +22.06.2017. 
 • DIV.Ef : CHAT TEXTAREA. +22.06.2017. This rule should put textarea to top when focussed (to allow for 
   virtual keyboards and chat window height dynamically reacting to them).
   .kq is dynamically added only on focus, but I could observe no effect with it, and it didn't work. 
   Options: width:100%; background-color:#99CCFF; 
   Comment: I was unable to set it to get to top only when focussed, per above issues w. .kq.
   DIV.lZ is the child element. Just in case. */

/* 320. top block, w. login stuff */
DIV.gb_4f {min-width:500px !important;}
/* stopped at min-width:682px */

/* Firefox-compatible HEADER */
DIV.gb_6f {min-width:320px !important;}

/* HEADER: ITEMS */
DIV.gb_T .gb_bg {display:block; padding-left:0px; padding-right:0px;}
/* Original: display:flex. Original paddings are from .gb_jb */

/* LOGO (Firefox) */
DIV.gb_1b {padding:0px 0px;}

/* RIGHT-SIDE ITEMS and USER LINK (Firefox). */
DIV.gb_Wc {float:left;}

/* CLASSIC HEADER STRIP (IceCat), USER LINK */
DIV.g-Ue-OkO9ve {margin-left:0px;}
 /* ^ container */
DIV#gbg {background-color:#2d2d2d; border-left:solid 1px Gray; padding-right:0px;}
   
/* Unknown location, whole viewport, causes a horizontal scrollbar; affects min-width and min-height. Contains left-side menu. */
DIV.g-Ue-Ja-t {min-width:310px; min-height:320px;}
DIV.bdXzDb {top:29px;}
/* ^ This has z-index at 102... */

/* Follows .g-Ue-Ja-t */
DIV.g-Ue-ad {min-height:320px;}

/* Hangouts logo height adjustment: */
DIV#gba, DIV.gb_df, DIV.gb_df > .gb_R {height:24px;}
DIV.gb_df > .gb_R {line-height:22px;}
   
/* CONTACTS */
DIV.g-Ue-kc {width:75%; max-width:400px;}
/* original width:400px; 81%; */

/* CHAT WINDOW */
/* Below rule:
• right: can safely be set to 0px, since I got the hang wrt bottom stuff. For the most part, and for the first four chat windows only.
Because:
• On a small screen, there's a limit to how much the height can be. 
• If there can be more chat windows than |primary| colours in the rainbow, then the device is fast enough to handle such loads. */
DIV.Cl {right:0px !important; border-style:solid; border-width:2px;}

DIV.Cl[style*='36px'] {width:293px !important;}
/* This makes minimised chat windows longer, so that a message received from another person is visible. */
   
/* Below: The tildes are used instead of pluses to cover _any_ DIV.Cl sibling elements and not adjacent sibling elements (side-by-side), because the code is dynamic, and some extra elements are often added _before_ the first DIV.Cl element and _between_ later DIV.Cl elements, thus breaking inheritance with + selectors. The tilde is used to ensure, that colors and positions are always implemented. */

/* CHAT WINDOW 1: PURPLE */
DIV.Cl {border-color:#6A5ACD;}
/* is: #6A5ACD purple; Should work. */

/* CHAT WINDOW 2: BLUE */
DIV.Cl ~ DIV.Cl {border-color:#0077ee;}

DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(36px + 4px) !important;}

/* CHAT WINDOW 3: GREEN */
DIV.Cl ~ DIV.Cl ~ DIV.Cl {border-color:#00db73;}

DIV.Cl ~ DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(2 * (36px + 4px)) !important;}

/* CHAT WINDOW 4: YELLOW */
DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl {border-color:yellow;}

DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(3 * (36px + 4px)) !important;}

/* CHAT WINDOW 5: ORANGE */
DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl {border-color:orange;}

DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(4 * (36px + 4px)) !important;}

/* CHAT WINDOW 6: RED */
DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl {border-color:red;}
   
DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(5 * (36px + 4px)) !important;}

/* CHAT WINDOW 7: PINK */
DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl {border-color:HotPink;}

DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl ~ DIV.Cl[style*='36px'] {bottom:calc(6 * (36px + 4px)) !important;}

/* Above: Instead of making manually calculated bottom positions with each iteration, it's easier to use 'calc': 36px is the base height, 4px consists of the top- and bottom borders that are each 2px. While it's possible to use CSS variables, then it's resource-intensive, because the browser has to parse through each element. */

/* CHAT WINDOW: these are inside an IFRAME, which should be excluded now (26.04.2017). */

/* CHAT WINDOW TITLE (name) widths to show controls */
/* DIV.xB {width:55%;} */

/* CHAT WINDOW TITLE: Tests to see, if stuff works. Comment in, when not needed. */
/* DIV.xB {border:solid 1px yellow;} */

/* CHAT WINDOW TEXTAREA */
/* DIV.tk {width:86%;} */

/* background image */
DIV.kFx1Ae-xdwExf-eb-m IMG {display:none;}
   
/* background image author (26.04.2017) */
HTML.g-Ue .g-Ue-ad .g-Qx-r4m2rf-wZVHld {display:none;}

/* right block */
DIV.g-Ue-v0h5Oe {display:none; top:70px; left:5px; width:auto; min-width:unset; min-width:64px; max-width:unset; min-height:160px; z-index:-1;}

/* right block rings (all) */
DIV.g-Ue-v0h5Oe UL {margin-top:0px; margin-bottom:0px; white-space:normal;}

/* right block rings (individual) */
DIV.g-Ue-v0h5Oe LI {margin-top:16px; margin-right:24px;}

/* right block rings */
DIV.g-Ue-b {margin-bottom:5px;}

}

